# Generated by Django 4.2.5 on 2023-12-08 11:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import drf_app.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lang',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('short_name', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Lemma',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lemma', models.CharField(max_length=150)),
                ('pos', models.CharField(choices=[('X', 'Other'), ('ADJ', 'Adjective'), ('ADP', 'adposition'), ('ADV', 'adverb'), ('AUX', 'auxiliary'), ('CCONJ', 'coordinating conjunction'), ('DET', 'determiner'), ('INTJ', 'interjection'), ('NOUN', 'noun'), ('NUM', 'numeral'), ('PART', 'particle'), ('PRON', 'pronoun'), ('PROPN', 'proper noun'), ('PUNCT', 'punctuation'), ('SCONJ', 'subordinating conjunction'), ('SYM', 'symbol'), ('SPACE', 'space'), ('VERB', 'verb')], default='X', max_length=5)),
                ('translate', models.JSONField(blank=True, default=None, null=True, validators=[drf_app.validators.validate_json])),
            ],
        ),
        migrations.CreateModel(
            name='UserVocabulary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('through_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, max_length=300)),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order_lemmas', models.JSONField(blank=True, default=None, null=True, validators=[drf_app.validators.validate_json])),
                ('source_text', models.TextField()),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='voc_author', to=settings.AUTH_USER_MODEL)),
                ('lang_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voc_from', to='drf_app.lang')),
                ('lang_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voc_to', to='drf_app.lang')),
                ('users', models.ManyToManyField(related_name='voc_users', through='drf_app.UserVocabulary', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VocabularyLemma',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('frequency', models.IntegerField(default=0)),
                ('lemma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drf_app.lemma')),
                ('vocabulary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drf_app.vocabulary')),
            ],
        ),
        migrations.AddField(
            model_name='uservocabulary',
            name='through_vocabulary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drf_app.vocabulary'),
        ),
        migrations.AddField(
            model_name='lemma',
            name='vocabularies',
            field=models.ManyToManyField(through='drf_app.VocabularyLemma', to='drf_app.vocabulary'),
        ),
    ]
